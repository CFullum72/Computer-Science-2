//
//Colin Fullum
//utilities.cpp
//contains free functions for assembler project
//November 10, 2019
//
///////////////////////////////////////////////

#include "utilities.hpp"

String infix2postfix(String expression){
  std::vector<String> line = expression.split(' ');
  stack<String> temp;
  String rhs,oper,lhs, result;
  int limit = line.size() - 1;

  if(expression.findch(0, ';') == -1){
    limit = line.size();
  }

  for(int i = 0; i < limit; i++) {
    String token = line[i];
    if(token != ")") {
      if(token != "(") {
	temp.push(token);
      }
    }else {
      rhs = temp.pop();
      oper = temp.pop();
      lhs = temp.pop();

      result = lhs + rhs + oper;
      temp.push(result);
    }
  }
  return temp.top();
}

